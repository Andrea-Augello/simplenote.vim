{"name":"simplenote.vim","body":"# simplenote.vim\r\nA vim plugin to interact with the [simplenote][1] API. You can create an\r\naccount [here](https://simple-note.appspot.com/create) if you don't already\r\nhave one.\r\nNow you can take simple notes directly from your favourite editor.\r\n\r\n![simplenote listing](http://mrtazz.com/simplenote.vim/list.png)\r\n\r\n## Installation\r\nThe simplest way is to copy `plugin` and `autoload` into your `.vim` directory.\r\nBut you really want to use [pathogen][5] for your plugin management.\r\n\r\nYour credentials have to be stored in your `vimrc`:\r\n\r\n    let g:SimplenoteUsername = \"your simplenote username\"\r\n    let g:SimplenotePassword = \"your simplenote password\"\r\n\r\nIf you don't want to have the credentials in your `vimrc` (if you manage it\r\nwith git for example), you can just set the variables in a different file (like\r\n`~/.simplenoterc`) and source it with `source ~/.simplenoterc` in your `vimrc`.\r\n\r\n## Usage\r\nThe plugin provides several commands to interact with your Simplenote account.\r\nIn order to retrieve a list of your notes execute\r\n\r\n    :Simplenote -l\r\n\r\nThis opens a new scratch buffer with a line-wise listing of your notes. You can\r\nnavigate through these with the arrow keys and enter a note on hitting\r\n`Return`. Now that you see the content of the note, you can interact with this\r\nspecific note:\r\n\r\n    :Simplenote -u\r\n\r\nupdates the content of the current note with the content of the current buffer.\r\nIf you want to delete the note, execute\r\n\r\n    :Simplenote -d\r\n\r\nThis moves the current note to the trash. If you want to completely delete a\r\nnote, use\r\n\r\n    :Simplenote -D\r\n\r\nas it will directly delete the note and not only move it to the trash.\r\nThere also exists a command to create new notes.\r\n\r\n    :Simplenote -n\r\n\r\ncreates a new note with the contents of the current buffer. Once the note is\r\ncreated, `:Simplenote -u` updates the newly created note, also with the\r\ncontents of the current buffer.\r\nTagging notes is also supported. If you enter\r\n\r\n    :Simplenote -t\r\n\r\non a buffer containing a valid note, you get an input dialog, prefilled with\r\nexisting comma-separated tags for the note, which you can then edit. Tags have\r\nto be comma separated and hitting `Enter` will then update the note with the\r\nnew tag list.\r\n\r\n## Dependencies\r\nVersion 2 of the SimpleNote API relies heavily on JSON. As JSON and VimL don't\r\nreally play nice together, basic parts of this plugin are implemented in\r\npython. Therefore your vim has to be compiled with python support in order to\r\nuse this plugin.\r\n\r\n## Usage behind proxy\r\nSince the plugin uses Python's urllib2 for making HTTP requests, you just have to\r\nadd these lines (with the correct values) to your `.vimrc`:\r\n\r\n    let $HTTP_PROXY = 'http://<proxyuser>:<proxypassword>@<proxyurl>:<proxyport>'\r\n    let $HTTPS_PROXY = 'http://<proxyuser>:<proxypassword>@<proxyurl>:<proxyport>'\r\n\r\n## Development\r\n- [Bugs and issue tracker](https://github.com/mrtazz/simplenote.vim/issues)\r\n\r\n## Thanks\r\n@mattn, @tpope and @scrooloose who write awesome vim plugins\r\nwhich I took as a basis to learn how to write vim plugins.\r\n\r\n[1]: http://simplenoteapp.com/\r\n[5]: http://github.com/tpope/vim-pathogen","tagline":"vim plugin to interact with the simplenote service","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}